#include <bits/stdc++.h>
using namespace std;

typedef unsigned long long int ll;
ll g, n;

ll modular_expo(ll a, ll p)
{
	ll result = 1;
	a = a % n;

	while (p > 0){
		if (p & 1){
			result = (result * a) % n;
		}

		p = p >> 1;
		a = (a * a) % n;
	}

	return result;
}

void exchange_protocol()
{	
	ofstream myfile1("Alice.txt");
	ofstream myfile2("Bob.txt");

	if (myfile1.is_open() && myfile2.is_open()){
	
		ll x = rand() % 1000000000;
		ll y = rand() % 1000000000;

		myfile1 << "x value generated by Alice is : ";
		myfile1 << x << "\n" << endl;

		myfile2 << "y value generated by Bob is : ";
		myfile2 << y << "\n" << endl;

		ll R1 = modular_expo(g, x);
		ll R2 = modular_expo(g, y);

		myfile1 << "R1 value ((g ^ x) mod n) generated by Alice for sending to Bob is : ";
		myfile1 << R1 << "\n" << endl;

		myfile2 << "R2 value ((g ^ y) mod n) generated by Bob for sending to Alice is : ";
		myfile2 << R2 << "\n" << endl;

		myfile1 << "R2 value ((g ^ y) mod n) received by Alice from Bob is : ";
		myfile1 << R2 << "\n" << endl;

		myfile2 << "R1 value ((g ^ x) mod n) received by Bob from Alice is : ";
		myfile2 << R1 << "\n" << endl;

		ll key_1 = modular_expo(R2, x);
		ll key_2 = modular_expo(R1, y);

		myfile1 << "Shared secret key ((R2 ^ x) mod n) generated by Alice is : ";
		myfile1 << key_1 << "\n" << endl;

		myfile2 << "Shared secret key ((R1 ^ y) mod n) generated by Bob is : ";
		myfile2 << key_2 << "\n" << endl;

		myfile1.close();
		myfile2.close();
	
	} else {
		cout << "Unable to open file" << endl;
	}
}

int main()
{
	string line;

	cout << "Enter values of g and n (prime numbers): " << endl; 
	cin >> g >> n;

	exchange_protocol();

	return 0;
}